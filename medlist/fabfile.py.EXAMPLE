# -*- coding: utf-8 -*-
import os
from fabric.api import env, local, settings, abort, run, cd
from fabric.operations import local,put, sudo
from fabric.context_managers import prefix

env.user = ''
env.path = ''
env.gitpath = ''
env.virtualenv = ''

def test():
    env.hosts = ['']
 
def homolog():    
    env.hosts = ['']

def reset_db(app):
    """Realiza reset do app
    """    
    with prefix('. %s/bin/activate' % env.virtualenv):
        with cd(env.path):   
            run('python manage.py reset %s' % app) 
            run('python manage.py syncdb')
            run('python manage.py loaddata fixtures/%s.json' % app)
     

def migration():
    """Realiza migration local
    """    
    with prefix('. %s/bin/activate' % env.virtualenv):
       local('python manage.py schemamigration gerenciador --auto') 
       local('python manage.py migrate gerenciador')

def restart_app():
    """Restarts remote uwsgi.
    """
    with cd(os.path.join(env.path,'..')):
        run("touch application.wsgi")

def update_version_file():
    with cd(env.path):
        run("git describe | cut -f 1,2 -d - > templates/version.txt")

def simple_update():
    """Somente atualiza código (git pull) e restart serviço
    """
    with cd(env.gitpath):
        run("git pull")

    update_version_file()
    restart_app()
 
def full_update():    
    """Atualiza código. Instala dependências. Migrations. Restart server.
    """
    simple_update()
    with cd(env.path):
        with prefix('. %s/bin/activate' % env.virtualenv):
            run('pip install -r requirements.txt')
            run('python manage.py syncdb')
            run('python manage.py migrate gerenciador') # South
    
    update_version_file()     
    restart_app()
